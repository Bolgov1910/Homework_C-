// Задача №39
// Напишите программу, которая перевернёт одномерный массив 
// (последний элемент будет на первом месте, а первый - на последнем и т.д.)
// Например: [1 2 3 4 5] -> [5 4 3 2 1] [6 7 3 6] -> [6 3 7 6] Комментарий: эту 
// задачу можно решить 2 способами: 1) менять числа местами в исходном массиве; 
// 2) создать новый массив и в него записать перевёрнутый исходный массив по элементам.

// Генерация массива
int[] Gen1DArr(int len, int min, int max) // длина массива, минимум и максимум случайных чисел
{
    int[] arr = new int[len];
    for(int i=0; i<len; i++) arr[i] =  new Random().Next(min,max+1); // +1 - последнее число в интервал не входит
    return arr;
}

// метод: печать
void Print1DArr(int[] arr) 
{     
    Console.Write("[");                               //кавчка спереди 
    for (int i = 0; i < arr.Length - 1; i++)        // элементы массива (-1) - без последнего элемента 
    {         
        Console.Write($"{arr[i]}, ");                // на вывод
    }     
    Console.WriteLine($"{arr[arr.Length - 1]}]");    // вывод последнего элемента - это чтобы не было запятой в конце
}  
// 1 вариант меняем первый и последний элементы местами, цикл только до середины массива, т.к. работа с двух концов
void SvapArr (int[] arr)
{
    int buf =0;
    for (int i=0; i<arr.Length/2; i++)
    {
        buf = arr[i];
        arr[i] = arr[arr.Length-1-i];
        arr[arr.Length-1-i] = buf;
    }
}

// 2 вариант- заполняем новый массив с обратной стороны
int[] SvapNewArr (int[] arr)
{
    int[] outArr = new int[arr.Length]; 
    for (int i = 0; i<outArr.Length; i++)
    {
        outArr[i] = arr [arr.Length-1-i];  // заполняем новый массив- с конца исходного
    }
    return outArr;
}


int[] testArr = Gen1DArr (80,10,100); // генерируем массив
Print1DArr(testArr);    // Чтобы посмотреть заполнение
int[] outArrey = SvapNewArr(testArr);    // новый массив - в обратном порядке
Print1DArr(outArrey);      // Чтобы посмотреть результат - новый массив
SvapArr (testArr);      // Перестановки в исходном массиве
Print1DArr(testArr);      // Чтобы посмотреть результат - перевернутый исходный
